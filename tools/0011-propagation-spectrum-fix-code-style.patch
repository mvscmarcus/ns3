From 377e9c42937b024e49005c5a4c011a25858e03b8 Mon Sep 17 00:00:00 2001
From: Giovanni Grieco <giovanni.grieco@poliba.it>
Date: Wed, 5 Jul 2023 10:29:45 +0000
Subject: [PATCH 2/2] propagation,spectrum: fix code style

---
 .../model/channel-condition-model.cc          |  66 +++---
 .../model/three-gpp-propagation-loss-model.cc | 223 +++++++++---------
 src/spectrum/model/three-gpp-channel-model.cc |  20 +-
 3 files changed, 155 insertions(+), 154 deletions(-)

diff --git a/src/propagation/model/channel-condition-model.cc b/src/propagation/model/channel-condition-model.cc
index d5dcd20b7..932d8383d 100644
--- a/src/propagation/model/channel-condition-model.cc
+++ b/src/propagation/model/channel-condition-model.cc
@@ -924,14 +924,14 @@ ThreeGppNTNDenseUrbanChannelConditionModel::ComputePlos(Ptr<const MobilityModel>
     auto bNTNMob = DynamicCast<GeocentricMobilityModel>(bMobNonConst);
 
     if (aNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z <
-        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC)
-            .z) // b is the HAPS/Satellite
-        {
-            elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
-        }
-        else // a is the HAPS/Satellite
-        {
-            elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
+        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z)
+    {
+        // b is the HAPS/Satellite
+        elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
+    }
+    else // a is the HAPS/Satellite
+    {
+        elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
     }
 
     int elev_angle_quantized =
@@ -1001,15 +1001,15 @@ ThreeGppNTNUrbanChannelConditionModel::ComputePlos(Ptr<const MobilityModel> a,
     auto bNTNMob = DynamicCast<GeocentricMobilityModel>(bMobNonConst);
 
     if (aNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z <
-        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC)
-            .z) // b is the HAPS/Satellite
-        {
-            elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
-        }
-        else // a is the HAPS/Satellite
-        {
-            elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
-        }
+        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z)
+    {
+        // b is the HAPS/Satellite
+        elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
+    }
+    else // a is the HAPS/Satellite
+    {
+        elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
+    }
 
     int elev_angle_quantized =
         (elev_angle < 10)
@@ -1078,14 +1078,14 @@ ThreeGppNTNSuburbanChannelConditionModel::ComputePlos(Ptr<const MobilityModel> a
     Ptr<GeocentricMobilityModel> bNTNMob = DynamicCast<GeocentricMobilityModel>(bMobNonConst);
 
     if (aNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z <
-        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC)
-            .z) // b is the HAPS/Satellite
-        {
-            elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
-        }
-        else // a is the HAPS/Satellite
-        {
-            elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
+        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z)
+    {
+        // b is the HAPS/Satellite
+        elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
+    }
+    else // a is the HAPS/Satellite
+    {
+        elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
     }
 
     int elev_angle_quantized =
@@ -1155,14 +1155,14 @@ ThreeGppNTNRuralChannelConditionModel::ComputePlos(Ptr<const MobilityModel> a,
     auto bNTNMob = DynamicCast<GeocentricMobilityModel>(bMobNonConst);
 
     if (aNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z <
-        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC)
-            .z) // b is the HAPS/Satellite
-        {
-            elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
-        }
-        else // a is the HAPS/Satellite
-        {
-            elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
+        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z)
+    {
+        // b is the HAPS/Satellite
+        elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
+    }
+    else // a is the HAPS/Satellite
+    {
+        elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
     }
 
     int elev_angle_quantized =
diff --git a/src/propagation/model/three-gpp-propagation-loss-model.cc b/src/propagation/model/three-gpp-propagation-loss-model.cc
index b9bc93229..c7ba9e804 100644
--- a/src/propagation/model/three-gpp-propagation-loss-model.cc
+++ b/src/propagation/model/three-gpp-propagation-loss-model.cc
@@ -1611,15 +1611,16 @@ ThreeGppNTNDenseUrbanPropagationLossModel::GetLossLos(Ptr<MobilityModel> a,
     auto bNTNMob = DynamicCast<GeocentricMobilityModel>(bMobNonConst);
 
     if (aNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z <
-        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC)
-            .z) // b is the HAPS/Satellite
-        {
-            elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
-        }
-        else // a is the HAPS/Satellite
-        {
-            elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
-        }
+        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z)
+    {
+        // b is the HAPS/Satellite
+        elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
+    }
+    else
+    {
+        // a is the HAPS/Satellite
+        elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
+    }
 
     int elev_angle_quantized =
         (elev_angle < 10)
@@ -1681,15 +1682,15 @@ ThreeGppNTNDenseUrbanPropagationLossModel::GetLossNlos(Ptr<MobilityModel> a,
     auto bNTNMob = DynamicCast<GeocentricMobilityModel>(bMobNonConst);
 
     if (aNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z <
-        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC)
-            .z) // b is the HAPS/Satellite
-        {
-            elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
-        }
-        else // a is the HAPS/Satellite
-        {
-            elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
-        }
+        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z)
+    {
+        // b is the HAPS/Satellite
+        elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
+    }
+    else // a is the HAPS/Satellite
+    {
+        elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
+    }
 
     int elev_angle_quantized =
         (elev_angle < 10)
@@ -1763,15 +1764,15 @@ ThreeGppNTNDenseUrbanPropagationLossModel::GetShadowingStd(
     auto bNTNMob = DynamicCast<GeocentricMobilityModel>(bMobNonConst);
 
     if (aNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z <
-        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC)
-            .z) // b is the HAPS/Satellite
-        {
-            elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
-        }
-        else // a is the HAPS/Satellite
-        {
-            elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
-        }
+        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z)
+    {
+        // b is the HAPS/Satellite
+        elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
+    }
+    else // a is the HAPS/Satellite
+    {
+        elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
+    }
 
     int elev_angle_quantized =
         (elev_angle < 10)
@@ -1888,15 +1889,15 @@ ThreeGppNTNUrbanPropagationLossModel::GetLossLos(Ptr<MobilityModel> a, Ptr<Mobil
     auto bNTNMob = DynamicCast<GeocentricMobilityModel>(bMobNonConst);
 
     if (aNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z <
-        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC)
-            .z) // b is the HAPS/Satellite
-        {
-            elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
-        }
-        else // a is the HAPS/Satellite
-        {
-            elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
-        }
+        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z)
+    {
+        // b is the HAPS/Satellite
+        elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
+    }
+    else // a is the HAPS/Satellite
+    {
+        elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
+    }
 
     int elev_angle_quantized =
         (elev_angle < 10)
@@ -1956,15 +1957,15 @@ ThreeGppNTNUrbanPropagationLossModel::GetLossNlos(Ptr<MobilityModel> a, Ptr<Mobi
     auto bNTNMob = DynamicCast<GeocentricMobilityModel>(bMobNonConst);
 
     if (aNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z <
-        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC)
-            .z) // b is the HAPS/Satellite
-        {
-            elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
-        }
-        else // a is the HAPS/Satellite
-        {
-            elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
-        }
+        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z)
+    {
+        // b is the HAPS/Satellite
+        elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
+    }
+    else // a is the HAPS/Satellite
+    {
+        elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
+    }
 
     int elev_angle_quantized =
         (elev_angle < 10)
@@ -2042,15 +2043,15 @@ ThreeGppNTNUrbanPropagationLossModel::GetShadowingStd(
     auto bNTNMob = DynamicCast<GeocentricMobilityModel>(bMobNonConst);
 
     if (aNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z <
-        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC)
-            .z) // b is the HAPS/Satellite
-        {
-            elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
-        }
-        else // a is the HAPS/Satellite
-        {
-            elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
-        }
+        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z)
+    {
+        // b is the HAPS/Satellite
+        elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
+    }
+    else // a is the HAPS/Satellite
+    {
+        elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
+    }
 
     int elev_angle_quantized =
         (elev_angle < 10)
@@ -2169,15 +2170,15 @@ ThreeGppNTNSuburbanPropagationLossModel::GetLossLos(Ptr<MobilityModel> a,
 
     if (aNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z <
         bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z)
-        {
+    {
         // b is the HAPS/Satellite
-            elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
-        }
+        elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
+    }
     else
-        {
+    {
         // a is the HAPS/Satellite
-            elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
-        }
+        elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
+    }
 
     int elev_angle_quantized =
         (elev_angle < 10)
@@ -2239,15 +2240,15 @@ ThreeGppNTNSuburbanPropagationLossModel::GetLossNlos(Ptr<MobilityModel> a,
     auto bNTNMob = DynamicCast<GeocentricMobilityModel>(bMobNonConst);
 
     if (aNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z <
-        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC)
-            .z) // b is the HAPS/Satellite
-        {
-            elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
-        }
-        else // a is the HAPS/Satellite
-        {
-            elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
-        }
+        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z)
+    {
+        // b is the HAPS/Satellite
+        elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
+    }
+    else // a is the HAPS/Satellite
+    {
+        elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
+    }
 
     int elev_angle_quantized =
         (elev_angle < 10)
@@ -2325,15 +2326,15 @@ ThreeGppNTNSuburbanPropagationLossModel::GetShadowingStd(
     auto bNTNMob = DynamicCast<GeocentricMobilityModel>(bMobNonConst);
 
     if (aNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z <
-        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC)
-            .z) // b is the HAPS/Satellite
-        {
-            elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
-        }
-        else // a is the HAPS/Satellite
-        {
-            elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
-        }
+        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z)
+    {
+        // b is the HAPS/Satellite
+        elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
+    }
+    else // a is the HAPS/Satellite
+    {
+        elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
+    }
 
     int elev_angle_quantized =
         (elev_angle < 10)
@@ -2450,15 +2451,15 @@ ThreeGppNTNRuralPropagationLossModel::GetLossLos(Ptr<MobilityModel> a, Ptr<Mobil
     auto bNTNMob = DynamicCast<GeocentricMobilityModel>(bMobNonConst);
 
     if (aNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z <
-        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC)
-            .z) // b is the HAPS/Satellite
-        {
-            elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
-        }
-        else // a is the HAPS/Satellite
-        {
-            elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
-        }
+        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z)
+    {
+        // b is the HAPS/Satellite
+        elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
+    }
+    else // a is the HAPS/Satellite
+    {
+        elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
+    }
 
     NS_LOG_UNCOND("Elevation Angle: " << elev_angle);
 
@@ -2491,10 +2492,10 @@ ThreeGppNTNRuralPropagationLossModel::GetLossLos(Ptr<MobilityModel> a, Ptr<Mobil
     }
 
     // Apply Troposhperic Scintillation Loss 3GPP 28.811 6.6.6.2
-    if (m_frequency > 6e9)
-    {
-        loss += troposphericScintillationLoss.at(elev_angle_quantized);
-    }
+    // if (m_frequency > 6e9)
+    // {
+    //     loss += troposphericScintillationLoss.at(elev_angle_quantized);
+    // }
 
     NS_LOG_DEBUG("Loss " << loss);
     return loss;
@@ -2520,14 +2521,14 @@ ThreeGppNTNRuralPropagationLossModel::GetLossNlos(Ptr<MobilityModel> a, Ptr<Mobi
     auto bNTNMob = DynamicCast<GeocentricMobilityModel>(bMobNonConst);
 
     if (aNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z <
-        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC)
-            .z) // b is the HAPS/Satellite
-        {
-            elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
-        }
-        else // a is the HAPS/Satellite
-        {
-            elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
+        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z)
+    {
+        // b is the HAPS/Satellite
+        elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
+    }
+    else // a is the HAPS/Satellite
+    {
+        elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
     }
 
     int elev_angle_quantized =
@@ -2573,10 +2574,10 @@ ThreeGppNTNRuralPropagationLossModel::GetLossNlos(Ptr<MobilityModel> a, Ptr<Mobi
     }
 
     // Apply Troposhperic Scintillation Loss 3GPP 28.811 6.6.6.2
-    if (m_frequency > 6e9)
-    {
-        loss += troposphericScintillationLoss.at(elev_angle_quantized);
-    }
+    // if (m_frequency > 6e9)
+    // {
+    //     loss += troposphericScintillationLoss.at(elev_angle_quantized);
+    // }
 
     NS_LOG_DEBUG("Loss " << loss);
     return loss;
@@ -2606,14 +2607,14 @@ ThreeGppNTNRuralPropagationLossModel::GetShadowingStd(
     auto bNTNMob = DynamicCast<GeocentricMobilityModel>(bMobNonConst);
 
     if (aNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z <
-        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC)
-            .z) // b is the HAPS/Satellite
-        {
-            elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
-        }
-        else // a is the HAPS/Satellite
-        {
-            elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
+        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z)
+    {
+        // b is the HAPS/Satellite
+        elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
+    }
+    else // a is the HAPS/Satellite
+    {
+        elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
     }
 
     int elev_angle_quantized =
diff --git a/src/spectrum/model/three-gpp-channel-model.cc b/src/spectrum/model/three-gpp-channel-model.cc
index 1dbeb504a..e67b8b280 100644
--- a/src/spectrum/model/three-gpp-channel-model.cc
+++ b/src/spectrum/model/three-gpp-channel-model.cc
@@ -2320,20 +2320,20 @@ ThreeGppChannelModel::GetThreeGppTable(const Ptr<const MobilityModel> aMob,
 
         if (aNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z <
             bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z)
-            {
-                elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
+        {
+            elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
             if (bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z > 50000)
-                {
-                    satellite = true;
-                }
+            {
+                satellite = true;
             }
+        }
         else
-            {
-                elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
+        {
+            elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
             if (aNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z > 50000)
-                {
-                    satellite = true;
-                }
+            {
+                satellite = true;
+            }
         }
 
         int elev_angle_quantized =
-- 
2.41.0


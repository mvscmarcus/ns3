From 74ab0ecd2c5263cd89ad6be3ae27a6ef9e0f795d Mon Sep 17 00:00:00 2001
From: Giovanni Grieco <giovanni.grieco@poliba.it>
Date: Sun, 25 Jun 2023 11:00:52 +0000
Subject: [PATCH] propagation: check lower-bound frequency according to 3GPP TR
 38.811

---
 .../model/three-gpp-propagation-loss-model.cc    | 16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/src/propagation/model/three-gpp-propagation-loss-model.cc b/src/propagation/model/three-gpp-propagation-loss-model.cc
index 14ed3e074..b9bc93229 100644
--- a/src/propagation/model/three-gpp-propagation-loss-model.cc
+++ b/src/propagation/model/three-gpp-propagation-loss-model.cc
@@ -1594,7 +1594,7 @@ ThreeGppNTNDenseUrbanPropagationLossModel::GetLossLos(Ptr<MobilityModel> a,
                                                       Ptr<MobilityModel> b) const
 {
     NS_LOG_FUNCTION(this);
-    NS_ASSERT_MSG(m_frequency <= 100.0e9,
+    NS_ASSERT_MSG(m_frequency >= 0.5e9 && m_frequency <= 100.0e9,
                   "NTN communications are valid for frequencies between 0.5 and 100 GHz.");
 
     double elev_angle = 0;
@@ -1664,7 +1664,7 @@ ThreeGppNTNDenseUrbanPropagationLossModel::GetLossNlos(Ptr<MobilityModel> a,
                                                        Ptr<MobilityModel> b) const
 {
     NS_LOG_FUNCTION(this);
-    NS_ASSERT_MSG(m_frequency <= 100.0e9,
+    NS_ASSERT_MSG(m_frequency >= 0.5e9 && m_frequency <= 100.0e9,
                   "NTN communications are valid for frequencies between 0.5 and 100 GHz.");
 
     double elev_angle = 0;
@@ -1871,7 +1871,7 @@ double
 ThreeGppNTNUrbanPropagationLossModel::GetLossLos(Ptr<MobilityModel> a, Ptr<MobilityModel> b) const
 {
     NS_LOG_FUNCTION(this);
-    NS_ASSERT_MSG(m_frequency <= 100.0e9,
+    NS_ASSERT_MSG(m_frequency >= 0.5e9 && m_frequency <= 100.0e9,
                   "NTN communications are valid for frequencies between 0.5 and 100 GHz.");
 
     double elev_angle = 0;
@@ -1940,7 +1940,7 @@ double
 ThreeGppNTNUrbanPropagationLossModel::GetLossNlos(Ptr<MobilityModel> a, Ptr<MobilityModel> b) const
 {
     NS_LOG_FUNCTION(this);
-    NS_ASSERT_MSG(m_frequency <= 100.0e9,
+    NS_ASSERT_MSG(m_frequency >= 0.5e9 && m_frequency <= 100.0e9,
                   "NTN communications are valid for frequencies between 0.5 and 100 GHz.");
     double elev_angle = 0;
     double distance3D = CalculateDistance(a->GetPosition(), b->GetPosition());
@@ -2151,7 +2151,7 @@ ThreeGppNTNSuburbanPropagationLossModel::GetLossLos(Ptr<MobilityModel> a,
                                                     Ptr<MobilityModel> b) const
 {
     NS_LOG_FUNCTION(this);
-    NS_ASSERT_MSG(m_frequency <= 100.0e9,
+    NS_ASSERT_MSG(m_frequency >= 0.5e9 && m_frequency <= 100.0e9,
                   "NTN communications are valid for frequencies between 0.5 and 100 GHz.");
 
     double elev_angle = 0;
@@ -2223,7 +2223,7 @@ ThreeGppNTNSuburbanPropagationLossModel::GetLossNlos(Ptr<MobilityModel> a,
                                                      Ptr<MobilityModel> b) const
 {
     NS_LOG_FUNCTION(this);
-    NS_ASSERT_MSG(m_frequency <= 100.0e9,
+    NS_ASSERT_MSG(m_frequency >= 0.5e9 && m_frequency <= 100.0e9,
                   "NTN communications are valid for frequencies between 0.5 and 100 GHz.");
     double elev_angle = 0;
     double distance3D = CalculateDistance(a->GetPosition(), b->GetPosition());
@@ -2433,7 +2433,7 @@ double
 ThreeGppNTNRuralPropagationLossModel::GetLossLos(Ptr<MobilityModel> a, Ptr<MobilityModel> b) const
 {
     NS_LOG_FUNCTION(this);
-    NS_ASSERT_MSG(m_frequency <= 100.0e9,
+    NS_ASSERT_MSG(m_frequency >= 0.5e9 && m_frequency <= 100.0e9,
                   "NTN communications are valid for frequencies between 0.5 and 100 GHz.");
 
     double elev_angle = 0;
@@ -2504,7 +2504,7 @@ double
 ThreeGppNTNRuralPropagationLossModel::GetLossNlos(Ptr<MobilityModel> a, Ptr<MobilityModel> b) const
 {
     NS_LOG_FUNCTION(this);
-    NS_ASSERT_MSG(m_frequency <= 100.0e9,
+    NS_ASSERT_MSG(m_frequency >= 0.5e9 && m_frequency <= 100.0e9,
                   "NTN communications are valid for frequencies between 0.5 and 100 GHz.");
     double elev_angle = 0;
     double distance3D = CalculateDistance(a->GetPosition(), b->GetPosition());
-- 
2.40.1


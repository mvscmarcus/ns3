From d5d826330ec1bafacc3bd636e614f66a8ffd857d Mon Sep 17 00:00:00 2001
From: Giovanni Grieco <giovanni.grieco@poliba.it>
Date: Fri, 8 Sep 2023 15:27:01 +0000
Subject: [PATCH] propagation: ignore tropospheric scintillation if user is
 above 20km of altitude

---
 src/mobility/model/geocentric-mobility-model.cc       |  1 -
 .../model/three-gpp-propagation-loss-model.cc         | 11 ++++++++---
 2 files changed, 8 insertions(+), 4 deletions(-)

diff --git a/src/mobility/model/geocentric-mobility-model.cc b/src/mobility/model/geocentric-mobility-model.cc
index 9bcbf3339..91ee71182 100644
--- a/src/mobility/model/geocentric-mobility-model.cc
+++ b/src/mobility/model/geocentric-mobility-model.cc
@@ -129,7 +129,6 @@ GeocentricMobilityModel::DoGetElevationAngle(Ptr<const GeocentricMobilityModel>
 {
     const auto& heightA = DoGetPosition(PositionType::GEOGRAPHIC).z;
     const auto& heightB = other->DoGetPosition(PositionType::GEOGRAPHIC).z;
-    NS_ASSERT_MSG(heightA < 8000, "Altitude of the ground terminal needs to be lower than 8km");
     NS_ASSERT_MSG(heightB >= 8000, "Altitude of the HAPS/Satellite needs to be higher than 8km");
     NS_ASSERT_MSG(heightA < heightB,
                   "Altitude of the argoument node needs to be higher than object node");
diff --git a/src/propagation/model/three-gpp-propagation-loss-model.cc b/src/propagation/model/three-gpp-propagation-loss-model.cc
index c7ba9e804..280471255 100644
--- a/src/propagation/model/three-gpp-propagation-loss-model.cc
+++ b/src/propagation/model/three-gpp-propagation-loss-model.cc
@@ -1609,17 +1609,22 @@ ThreeGppNTNDenseUrbanPropagationLossModel::GetLossLos(Ptr<MobilityModel> a,
 
     auto aNTNMob = DynamicCast<GeocentricMobilityModel>(aMobNonConst);
     auto bNTNMob = DynamicCast<GeocentricMobilityModel>(bMobNonConst);
+    double lowAltitudeUserHeight = 0.0;
+    
+    const auto aPos = aNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC);
+    const auto bPos = bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC);
 
-    if (aNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z <
-        bNTNMob->GetPosition(GeocentricMobilityModel::PositionType::GEOGRAPHIC).z)
+    if (aPos.z < bPos.z)
     {
         // b is the HAPS/Satellite
         elev_angle = aNTNMob->GetElevationAngle(bNTNMob);
+        lowAltitudeUserHeight = aPos.z;
     }
     else
     {
         // a is the HAPS/Satellite
         elev_angle = bNTNMob->GetElevationAngle(aNTNMob);
+        lowAltitudeUserHeight = bPos.z;
     }
 
     int elev_angle_quantized =
@@ -1651,7 +1656,7 @@ ThreeGppNTNDenseUrbanPropagationLossModel::GetLossLos(Ptr<MobilityModel> a,
     }
 
     // Apply Troposhperic Scintillation Loss 3GPP 28.811 6.6.6.2
-    if (m_frequency > 6e9)
+    if (m_frequency > 6e9 && lowAltitudeUserHeight <= 20e3)
     {
         loss += troposphericScintillationLoss.at(elev_angle_quantized);
     }
-- 
2.41.0

